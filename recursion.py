"""
Student information for this assignment:

Replace <FULL NAME> with your name.
On my/our honor, Preeratee Rojpanich and Sadie Zielinski, this
programming assignment is my own work and I have not provided this code to
any other student.

I have read and understand the course syllabus's guidelines regarding Academic
Integrity. I understand that if I violate the Academic Integrity policy (e.g.
copy code from someone else, have the code generated by an LLM, or give my
code to someone else), the case shall be submitted to the Office of the Dean of
Students. Academic penalties up to and including an F in the course are likely.

UT EID 1: pr25257
UT EID 2: snz298
"""


# TODO: Modify this function. You may delete this comment when you are done.
def group_sum(start, nums, target):
    """
    Given a list of ints, determine if there exists a group of some ints that sum to the
    given target.

    pre: start >= 0, len(nums) >= 0, target >= 0, nums will only contain ints
    post: return True if nums has a group of ints that sum to target, False otherwise
    """


# TODO: Modify this function. You may delete this comment when you are done.
def group_sum_6(start, nums, target):
    """
    Given a list of ints, determine if there exists a group of some ints that sum to the
    given target. Additionally, if there is are 6's present in the array, they must all
    be chosen.

    pre: start >= 0, len(nums) >= 0, target >= 0, nums will only contain ints
    post: return True if nums has a group of ints that sum to target, False otherwise
    """


# TODO: Modify this function. You may delete this comment when you are done.
def group_no_adj(start, nums, target):
    """
    Given a list of ints, determine if there exists a group of some ints that sum to
    the given target. Additionally, if a value is chosen, the value immediately after
    (the value adjacent) cannot be chosen.

    pre: start >= 0, len(nums) >= 0, target >= 0, nums will only contain ints
    post: return True if nums has a group of ints that sum to target, False otherwise
    """


# TODO: Modify this function. You may delete this comment when you are done.
def group_sum_5(start, nums, target):
    """
    Given a list of ints, determine if there exists a group of some ints that sum to
    the given target. Additionally, if a multiple of 5 is in the array, it must be included
    If the value immediately following a multiple of 5 if 1, it must not be chosen

    pre: start >= 0, len(nums) >= 0, target >= 0, nums will only contain ints
    post: return True if nums has a group of ints that sum to target, False otherwise
    """
    mul5 = []
    i = 0
    nums = nums[start:]
    if len(nums) == 1 and target == 0:
        return True

    while i < len(nums):
        if nums[i] % 5 == 0:
            mul5.append(nums[i])
            if i+1 < len(nums) and nums[i+1] == 1: #ลองลบ
                nums.pop(i+1)
        i += 1
    
    # get new list without the 1 after multiplier of 5
    remaining = target - sum(mul5)
    
    if sum(nums) == target:
        return True
    else:
        non_mul5 = []
        for num in nums:
            if num % 5 != 0:
                non_mul5.append(num)
        
        for num in non_mul5:
            if num == remaining:
                return True
                
        total = 0
        for num in non_mul5:
            total += num
            if total == remaining:
                return True
            
    return False


# TODO: Modify this function. You may delete this comment when you are done.
def group_sum_clump(start, nums, target):
    """
    Given a list of ints, determine if there exists a group of some ints that sum to
    the given target. Additionally, if there is a group of identical numbers in succession,
    they must all be chosen, or none of them must be chosen.
    EX: [1, 2, 2, 2, 5, 2], all three of the middle 2's must be chosen, or none of them must be
    chosen to be included in the sum. One loop is allowed to check for identical numbers.

    pre: start >= 0, len(nums) >= 0, target >= 0, nums will only contain ints
    post: return True if nums has a group of ints that sum to target, False otherwise
    """




# TODO: Modify this function
def split_array(nums):
    """
    Given a list of ints, determine if the numbers can be split evenly into two groups
    The sum of these two groups must be equal
    Write a recursive helper to call from this function

    pre: len(nums) >= 0, nums will only contain ints
    post: return True if nums can be split, False otherwise
    """
    if len(nums) == 0:
        return True 
    if len(nums) == 1 :
        return False 
    
    else:
        nums_sum = sum(nums)
        
        if nums_sum % 2 != 0:
            return False
        
        for num in nums:
            if num == nums_sum / 2:
                return True

        for num in nums:
            remain = (nums_sum / 2) - num
            for num in nums[1:]:
                if num == remain:
                    return True
                
        total = 0
        for num in nums:
            total += num
            if total == (nums_sum /2):
                return True
        
        return False


# TODO: Modify this function. You may delete this comment when you are done.
def split_odd_10(nums):
    """
    Given a list of ints, determine if the numbers can be split evenly into two groups
    The sum of one group must be odd, while the other group must be a multiple of 10
    Write a recursive helper to call from this function

    pre: len(nums) >= 0, nums will only contain ints
    post: return True if nums can be split, False otherwise
    """




# TODO: Modify this function. You may delete this comment when you are done.
def split_53(nums):
    """
    Given a list of ints, determine if the numbers can be split evenly into two groups
    The sum of these two groups must be equal
    Additionally, all multiples of 5 must be in one group, and all multiples of 3 (and not 5)
    must be in the other group
    Write a recursive helper to call from this function

    pre: len(nums) >= 0, nums will only contain ints
    post: return True if nums can be split, False otherwise
    """
